"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""


import os
from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-i*7^h2-ed)13xq1+6jmke%tr#q58=_fqfny0of1rf!9qm0_l)l'

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    #アプリケーション
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'imagekit',
    'webpush',

    # 作成したアプリ
    'users.apps.UsersConfig',
    'blog.apps.BlogConfig',
    'comments.apps.CommentsConfig',
    'contact.apps.ContactConfig',
    'search.apps.SearchConfig',
    'core',
    'likes',
    'followers',
    'tags',
    'messengers',
    'profanity_filter',
    'vue_integration', #→vueアプリ用のバックエンド



    # DRFを追加
    'rest_framework',
    'corsheaders',

    # allauthと関連アプリを追加
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    # crispy_formsとBootstrap5を追加
    'crispy_forms',
    'crispy_bootstrap5',

    #Third party

]

MIDDLEWARE = [
    # CorsMiddlewareはDjangoにCORSのルールを適用させるために必須
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware'
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'messengers.context_processors.unread_messages', 
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'
# 開発用のメール設定
# メールの代わりにコンソールに内容を出力する
#↓これは開発環境でのみ使用し、本番環境では必ず外してください。
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_FROM_EMAIL = "noreply@example.com"
EMAIL_USE_TLS = True
#使用するメッセージフレームワークによって変えてください。Defaultはsendgridです。
#EMAIL_HOST = "smtp.sendgrid.net"
#EMAIL_PORT = 587
#EMAIL_USE_TLS = True
#EMAIL_HOST_USER = 'apikey'
#EMAIL_HOST_PASSWORD = SENDGRID_API_KEY
#EMAIL_HOST_PASSWORD = SENDGRID_API_KEY

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/' 

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True

# セキュリティ対策のため、本番環境では必ずFalseに設定してください
DEBUG = True

ALLOWED_HOSTS = ['your-domain.com', 'localhost', '127.0.0.1']
# 'your-domain.com'を個人で使用するドメインに置き換えてください


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# 静的ファイルのURL
STATIC_URL = '/static/'
# 開発環境で静的ファイルを格納する場所
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    BASE_DIR / "apps" / "static",
    #BASE_DIR / "vue-contents" / "dist",
]
# 本番環境で静的ファイルが収集される場所
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# メディアファイルの設定
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",  # デフォルト
    "allauth.account.auth_backends.AuthenticationBackend",  # allauth用
]


ACCOUNT_LOGIN_METHODS = {"username", "email"} # ← username or email でログイン可
ACCOUNT_SIGNUP_FIELDS = ["email*", "username*", "password1*", "password2*"]
ACCOUNT_UNIQUE_EMAIL = True



# Django REST Frameworkの設定
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
}

# allauthの設定
SITE_ID = 1
LOGIN_REDIRECT_URL = '/'
ACCOUNT_LOGIN_METHODS = ['username', 'email']
ACCOUNT_SIGNUP_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_SESSION_REMEMBER = True
ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_FORMS = {
    'login': 'users.forms.CustomLoginForm',
    'signup': 'users.forms.CustomSignupForm',
}

# crispy_formsの設定
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

AUTH_USER_MODEL = "users.User"

# Django Allauth 設定（推奨）
ACCOUNT_USER_MODEL_USERNAME_FIELD = "username"
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5 # Default: 5
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 300 # Default 300
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = "username_email"  # ユーザー名 or メールでログイン　Default: 'username'
ACCOUNT_LOGOUT_REDIRECT_URL = 'account_login' # Default: '/'

#ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 3

# Cookie（認証情報）の送信を許可する
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    # "http://localhost:5173",
    "http://127.0.0.1:5173",  # 安全のためにこれも追加
]
CSRF_TRUSTED_ORIGINS = [
    #"http://localhost:5173",
    "http://127.0.0.1:5173",
]

# ローカル開発用
SESSION_COOKIE_SAMESITE = "Lax"  # None→Lax
CSRF_COOKIE_SAMESITE = "Lax"
SESSION_COOKIE_SECURE = False
CSRF_COOKIE_SECURE = False      # https を使う場合は True

# 本番環境（HTTPS）にする場合のみ
# SESSION_COOKIE_SAMESITE = "Lax"  # None→Lax
# CSRF_COOKIE_SAMESITE = "Lax"
# SESSION_COOKIE_SECURE = False
# CSRF_COOKIE_SECURE = False      # https を使う場合は True

# セッションおよびCSRFクッキー設定
#SESSION_COOKIE_SAMESITE = 'Lax'
#CSRF_COOKIE_SAMESITE = 'Lax'

# セッションクッキーの設定を追加
SESSION_COOKIE_DOMAIN = None
SESSION_COOKIE_SECURE = False
CSRF_COOKIE_SECURE = False

#通知
WEBPUSH_VAPID_PRIVATE_KEY = """-----BEGIN PRIVATE KEY-----
MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgEUOlG3tQ4VsJqqIL
Wu3SKQ8G7q5vnpJE4fkzN/TE/eChRANCAARg2CdXAOPyN1G7pBKrfEhzJ1k0l6hN
OgehwJO/F2TIfyN1vM4lrzN46atVVb6JxnEr4zZlbJFbxYcsTnjaJap4
-----END PRIVATE KEY-----"""

WEBPUSH_VAPID_PUBLIC_KEY = """-----BEGIN PUBLIC KEY-----
MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEYNgnVwDj8jdRu6QSq3xIcydZNJeo
TToHocCTvxdkyH8jdbzOJa8zeOmrVVW+icZxK+M2ZWyRW8WHLE542iWqeA==
-----END PUBLIC KEY-----"""


 #if os.environ.get('ENVIRONMENT') != 'production':
     #from .local_settings import *
    # DON'T PUT ANYTHING BELOW THIS
